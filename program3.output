Grammar

    0 $accept: program $end

    1 program: multibrackets
    2        | exp
    3        | type
    4        | newexp

    5 exp: name
    6    | NUMBER
    7    | NULLT
    8    | READ LPAREN RPAREN

    9 newexp: NEW ID LPAREN RPAREN
   10       | NEW simpletype
   11       | NEW simpletype bracketexps
   12       | NEW ID bracketexps
   13       | NEW simpletype bracketexps multibrackets
   14       | NEW ID bracketexps multibrackets

   15 type: simpletype

   16 simpletype: INT

   17 bracketexps: bracketexp
   18            | bracketexps bracketexp

   19 bracketexp: LBRACK exp RBRACK

   20 multibrackets: LBRACK RBRACK
   21              | multibrackets LBRACK RBRACK

   22 name: THIS
   23     | ID
   24     | name DOT ID
   25     | name bracketexps


Terminals, with rules where they appear

$end (0) 0
error (256)
THIS (258) 22
ID (259) 9 12 14 23 24
DOT (260) 24
LBRACK (261) 19 20 21
RBRACK (262) 19 20 21
NUMBER (263) 6
INT (264) 16
NEW (265) 9 10 11 12 13 14
LPAREN (266) 8 9
RPAREN (267) 8 9
READ (268) 8
NULLT (269) 7
BRACK (270)


Nonterminals, with rules where they appear

$accept (16)
    on left: 0
program (17)
    on left: 1 2 3 4, on right: 0
exp (18)
    on left: 5 6 7 8, on right: 2 19
newexp (19)
    on left: 9 10 11 12 13 14, on right: 4
type (20)
    on left: 15, on right: 3
simpletype (21)
    on left: 16, on right: 10 11 13 15
bracketexps (22)
    on left: 17 18, on right: 11 12 13 14 18 25
bracketexp (23)
    on left: 19, on right: 17 18
multibrackets (24)
    on left: 20 21, on right: 1 13 14 21
name (25)
    on left: 22 23 24 25, on right: 5 24 25


State 0

    0 $accept: . program $end

    THIS    shift, and go to state 1
    ID      shift, and go to state 2
    LBRACK  shift, and go to state 3
    NUMBER  shift, and go to state 4
    INT     shift, and go to state 5
    NEW     shift, and go to state 6
    READ    shift, and go to state 7
    NULLT   shift, and go to state 8

    program        go to state 9
    exp            go to state 10
    newexp         go to state 11
    type           go to state 12
    simpletype     go to state 13
    multibrackets  go to state 14
    name           go to state 15


State 1

   22 name: THIS .

    $default  reduce using rule 22 (name)


State 2

   23 name: ID .

    $default  reduce using rule 23 (name)


State 3

   20 multibrackets: LBRACK . RBRACK

    RBRACK  shift, and go to state 16


State 4

    6 exp: NUMBER .

    $default  reduce using rule 6 (exp)


State 5

   16 simpletype: INT .

    $default  reduce using rule 16 (simpletype)


State 6

    9 newexp: NEW . ID LPAREN RPAREN
   10       | NEW . simpletype
   11       | NEW . simpletype bracketexps
   12       | NEW . ID bracketexps
   13       | NEW . simpletype bracketexps multibrackets
   14       | NEW . ID bracketexps multibrackets

    ID   shift, and go to state 17
    INT  shift, and go to state 5

    simpletype  go to state 18


State 7

    8 exp: READ . LPAREN RPAREN

    LPAREN  shift, and go to state 19


State 8

    7 exp: NULLT .

    $default  reduce using rule 7 (exp)


State 9

    0 $accept: program . $end

    $end  shift, and go to state 20


State 10

    2 program: exp .

    $default  reduce using rule 2 (program)


State 11

    4 program: newexp .

    $default  reduce using rule 4 (program)


State 12

    3 program: type .

    $default  reduce using rule 3 (program)


State 13

   15 type: simpletype .

    $default  reduce using rule 15 (type)


State 14

    1 program: multibrackets .
   21 multibrackets: multibrackets . LBRACK RBRACK

    LBRACK  shift, and go to state 21

    $default  reduce using rule 1 (program)


State 15

    5 exp: name .
   24 name: name . DOT ID
   25     | name . bracketexps

    DOT     shift, and go to state 22
    LBRACK  shift, and go to state 23

    $default  reduce using rule 5 (exp)

    bracketexps  go to state 24
    bracketexp   go to state 25


State 16

   20 multibrackets: LBRACK RBRACK .

    $default  reduce using rule 20 (multibrackets)


State 17

    9 newexp: NEW ID . LPAREN RPAREN
   12       | NEW ID . bracketexps
   14       | NEW ID . bracketexps multibrackets

    LBRACK  shift, and go to state 23
    LPAREN  shift, and go to state 26

    bracketexps  go to state 27
    bracketexp   go to state 25


State 18

   10 newexp: NEW simpletype .
   11       | NEW simpletype . bracketexps
   13       | NEW simpletype . bracketexps multibrackets

    LBRACK  shift, and go to state 23

    $default  reduce using rule 10 (newexp)

    bracketexps  go to state 28
    bracketexp   go to state 25


State 19

    8 exp: READ LPAREN . RPAREN

    RPAREN  shift, and go to state 29


State 20

    0 $accept: program $end .

    $default  accept


State 21

   21 multibrackets: multibrackets LBRACK . RBRACK

    RBRACK  shift, and go to state 30


State 22

   24 name: name DOT . ID

    ID  shift, and go to state 31


State 23

   19 bracketexp: LBRACK . exp RBRACK

    THIS    shift, and go to state 1
    ID      shift, and go to state 2
    NUMBER  shift, and go to state 4
    READ    shift, and go to state 7
    NULLT   shift, and go to state 8

    exp   go to state 32
    name  go to state 15


State 24

   18 bracketexps: bracketexps . bracketexp
   25 name: name bracketexps .

    LBRACK  shift, and go to state 23

    $default  reduce using rule 25 (name)

    bracketexp  go to state 33


State 25

   17 bracketexps: bracketexp .

    $default  reduce using rule 17 (bracketexps)


State 26

    9 newexp: NEW ID LPAREN . RPAREN

    RPAREN  shift, and go to state 34


State 27

   12 newexp: NEW ID bracketexps .
   14       | NEW ID bracketexps . multibrackets
   18 bracketexps: bracketexps . bracketexp

    LBRACK  shift, and go to state 35

    $default  reduce using rule 12 (newexp)

    bracketexp     go to state 33
    multibrackets  go to state 36


State 28

   11 newexp: NEW simpletype bracketexps .
   13       | NEW simpletype bracketexps . multibrackets
   18 bracketexps: bracketexps . bracketexp

    LBRACK  shift, and go to state 35

    $default  reduce using rule 11 (newexp)

    bracketexp     go to state 33
    multibrackets  go to state 37


State 29

    8 exp: READ LPAREN RPAREN .

    $default  reduce using rule 8 (exp)


State 30

   21 multibrackets: multibrackets LBRACK RBRACK .

    $default  reduce using rule 21 (multibrackets)


State 31

   24 name: name DOT ID .

    $default  reduce using rule 24 (name)


State 32

   19 bracketexp: LBRACK exp . RBRACK

    RBRACK  shift, and go to state 38


State 33

   18 bracketexps: bracketexps bracketexp .

    $default  reduce using rule 18 (bracketexps)


State 34

    9 newexp: NEW ID LPAREN RPAREN .

    $default  reduce using rule 9 (newexp)


State 35

   19 bracketexp: LBRACK . exp RBRACK
   20 multibrackets: LBRACK . RBRACK

    THIS    shift, and go to state 1
    ID      shift, and go to state 2
    RBRACK  shift, and go to state 16
    NUMBER  shift, and go to state 4
    READ    shift, and go to state 7
    NULLT   shift, and go to state 8

    exp   go to state 32
    name  go to state 15


State 36

   14 newexp: NEW ID bracketexps multibrackets .
   21 multibrackets: multibrackets . LBRACK RBRACK

    LBRACK  shift, and go to state 21

    $default  reduce using rule 14 (newexp)


State 37

   13 newexp: NEW simpletype bracketexps multibrackets .
   21 multibrackets: multibrackets . LBRACK RBRACK

    LBRACK  shift, and go to state 21

    $default  reduce using rule 13 (newexp)


State 38

   19 bracketexp: LBRACK exp RBRACK .

    $default  reduce using rule 19 (bracketexp)
