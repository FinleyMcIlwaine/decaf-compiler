%{
// program3.lpp
// Finley McIlwaine
// COSC 4785 Fall 2019
// Program 02
// October 6, 2019

#include<string>
#include<iostream>
#include "MyScanner.hpp"
#include "node.hpp"
#include "program3.tab.hpp"

using std::string;
using std::cout;
using std::endl;
using std::cerr;

void yyerror(const char *s)
{
  cerr << s << endl;
  return;
}
%}

%option outfile="program3_lex.cpp"
%option yylineno
%option noyywrap
%option yyclass="MyScanner"

%%
"this" {
  read(yytext);
  return THIS;
}
"." {
  read(yytext);
  return DOT;
}
"[" {
  read(yytext);
  return LBRACK;
}
"]" {
  read(yytext);
  return RBRACK;
}
"(" {
  read(yytext);
  return LPAREN;
}
")" {
  read(yytext);
  return RPAREN;
}
[0-9]+ {
  read(yytext);
  string num(yytext);
  yylval.pnode=new NumberNode();
  yylval.pnode->setVal(num);
  return NUMBER;
}
"int" {
  read(yytext);
  return INT;
}
"new" {
  read(yytext);
  return NEW;
}
"read" {
  read(yytext);
  return READ;
}
"null" {
  read(yytext);
  return NULLT;
}
"!=" {
  read(yytext);
  return NE;
}
"==" {
  read(yytext);
  return EQ;
}
"<" {
  read(yytext);
  return LT;
}
">" {
  read(yytext);
  return GT;
}
"<=" {
  read(yytext);
  return LE;
}
">=" {
  read(yytext);
  return GE;
}
"&&" {
  read(yytext);
  return AND;
}
"||" {
  read(yytext);
  return OR;
}
"!" {
  read(yytext);
  return NOT;
}
"+" {
  read(yytext);
  return PLUS;
}
"-" {
  read(yytext);
  return MINUS;
}
"*" {
  read(yytext);
  return TIMES;
}
"/" {
  read(yytext);
  return DIV;
}
"%" {
  read(yytext);
  return MOD;
}
";" {
  read(yytext);
  return SEMI;
}
[_a-zA-Z]+[_0-9a-zA-Z]* {
  read(yytext);
  string id(yytext);
  yylval.pnode=new IdNode();
  yylval.pnode->setVal(id);
  return ID;
}
[ ]	{
  line+=" ";
  columnNumber++;
}
\t {
  line+="\t";
  columnNumber+=9-(columnNumber%8);
}
\n {
  cout << line << endl;
  lines.push_back(line);
  line="";
  columnNumber=1;
  lineNumber++;
}
%%
